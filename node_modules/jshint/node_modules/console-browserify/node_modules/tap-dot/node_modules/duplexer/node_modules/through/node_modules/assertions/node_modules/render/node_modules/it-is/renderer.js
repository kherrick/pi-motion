//renderer.js

var render = require('render')
  , trees = require('trees')
  , assert = require('assert')

function pathTo(obj,path){
  for(var i in path)
    obj = obj[path[i]]
  return obj
}

function pathToEnd(obj,path){
  for(var i in path){
    if(obj[path[i]] === undefined){
      var r = {value:obj, path: path.slice(0,i)}
      return r 
    }
    obj = obj[path[i]]
  }
  return {value:obj, path: path}
}


module.exports = {
  ok: function (error,style){
    return style.render(style.red(error.actual),'',style.red('ok'))
  }
, instanceof: function (error,style){
    return style.render 
      ( style.red (style.stringify(error.actual))
      , style.green (error.expected.name)
      , style.red('instanceof') )
  }
, like: function (error,style){
  var m = stringEq(error.actual,error.expected,style)
  return style.render("'" + m[0] + "'","'" + m[1] + "'",style.red('like'))
}
, equal: function (error,style,name){
  if('string' == typeof error.expected){
    var m = stringEq(error.actual,error.expected,st